; EE specific menu

add
menu
(
  popup "Trace"
  (
    popup "List"
    (
      separator
      menuitem "&Task Switches and Services"  "TRace.List List.TASK"
      menuitem "&Default and Tasks"           "TRace.List List.TASK DEFault"
    )
  )
  popup "Perf"
  (
    separator
    popup "&Task Runtime"
    (
        menuitem "&Prepare"
        (
          if tr.method.analyzer()
          (
            Analyzer.AutoInit on
          )
          if (ice()||fire())&&!a.mode.flow()
          (
            Analyzer.ReProgram
            (
              Sample.Enable if AlphaBreak&&Write
            )
          )
	  Break.Delete /Alpha
	  Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
        )
        menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASK"
        menuitem "[:achart]Show as &Timing" "Trace.CHART.TASK"
        menuitem "[:achart]Tracking with Trace &List"
        (
          Trace.List List.TASK DEFault /Track
          Trace.CHART.TASK /Track
        )
    )
    popup "Task &Services"
    (
        menuitem "&Prepare"
        (
          if (ice()||fire())&&!a.mode.flow()
          (
            Analyzer.ReProgram
            (
              Sample.Enable if AlphaBreak&&Write
            )
          )
	  Break.Delete /Alpha
          Break.Set task.config(magic_service) /Alpha
        )
        menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASKSRV"
        menuitem "[:achart]Show as &Timing" "Trace.CHART.TASKSRV"
        menuitem "[:achart]Tracking with Trace &List"
        (
          Trace.List List.TASK DEFault /Track
          Trace.CHART.TASKSRV /Track
        )
    )
    popup "Task &Function Runtime"
    (
      menuitem "&Prepare"
      (
        if tr.method.analyzer()
        (
          Analyzer.AutoInit on
          Analyzer.STATistic.PreFetch on
        )

        if (ice()||fire())&&!a.mode.flow()
        (
          if a.config.hac()
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak
               Sample.Enable if BetaBreak
               Mark.A        if AlphaBreak
               Mark.B        if BetaBreak
             )
          )
          else
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak||BetaBreak
               Mark.A if AlphaBreak
               Mark.B if BetaBreak
             )
          )
	)

        Break.Delete /Alpha /Beta /Charly
        Break.SetFunc
	Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
      )
      menuitem "[:perf]Show &Numerical"     "Trace.STATistic.TASKFUNC"
      menuitem "[:perf]Show as &Tree"       "Trace.STATistic.TASKTREE"
      menuitem "[:perf]Show &Detailed Tree" "Trace.STATistic.TASKTREE ALL"
      menuitem "[:achart]Show as &Timing"   "Trace.CHART.TASKFUNC"
      menuitem "[:alist]Show N&esting"      "Trace.List List.TASK FUNC TI.FUNC"
    )
    popup "Task &Status"
    (
      menuitem "&Prepare"
      (
        if tr.method.analyzer()
        (
          Analyzer.AutoInit on
        )
        if (ice()||fire())&&!a.mode.flow()
        (
          Analyzer.ReProgram
          (
            Sample.Enable if AlphaBreak&&Write
          )
        )
        Break.Delete /Alpha
        Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
        TASK.TASKState
      )
      menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASKSTATE"
      menuitem "[:achart]Show as &Timing" "Trace.CHART.TASKSTATE"
      menuitem "[:achart]Tracking with Trace &List"
      (
        Trace.List List.TASK DEFault /Track
        Trace.CHART.TASKSTATE /Track
      )
    )
  )
  popup "&Help"
  (
    menuitem "ORTI Multitask Debugger Manual" "HELP __EMORTI__EXT"
  )
)


