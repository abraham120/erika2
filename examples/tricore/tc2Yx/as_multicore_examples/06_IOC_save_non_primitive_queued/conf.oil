/* test for IOC interprocessor communication */
CPU test_application {

	OS EE {
    EE_OPT = "EE_DEBUG";
    EE_OPT = "__ASSERT__";
    EE_OPT = "EE_EXECUTE_FROM_RAM";
    //EE_OPT = "EE_SAVE_TEMP_FILES";
    //EE_OPT = "EE_MM_OPT";
    EE_OPT = "EE_ICACHE_ENABLED";
    EE_OPT = "EE_DCACHE_ENABLED";

    /* The following have to be generated by RT-Druid */
    EE_OPT = "EE_AS_IOC__";

    EE_OPT = "EE_BUILD_SINGLE_ELF";

    REMOTENOTIFICATION = USE_RPC;

    //EE_OPT = "TEST_ERROR_CONF";
    //CFLAGS = "-DTEST_SLAVE1_APPMODE=2";

    //SPINLOCKS = QUEUED;

    MASTER_CPU = "master";

    CPU_DATA = TRICORE {
      ID = "master";
      APP_SRC = "master.c";
      APP_SRC = "ioc_common.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };

    CPU_DATA = TRICORE {
      ID = "slave1";
      APP_SRC = "slave1.c";
      APP_SRC = "ioc_slave1.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };

    /*CPU_DATA = TRICORE {
      ID = "slave2";
      APP_SRC = "slave2.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };*/

    MCU_DATA = TRICORE {
      MODEL = TC27x;
    };

    STATUS = EXTENDED;
    USERESSCHEDULER = FALSE;

    //USEREMOTETASK = ALWAYS;
    ORTI_SECTIONS = ALL;

    KERNEL_TYPE = BCC1;
  };

    /* System timer not necessary for this application */
    /*COUNTER system_timer {
	    MINCYCLE = 1;
	    MAXALLOWEDVALUE = 2147483647;
	    TICKSPERBASE = 1;
	    TYPE = HARDWARE {
	      DEVICE = "DECREMENTER";
	      SYSTEM_TIMER = TRUE;
	    };
	    SECONDSPERTICK = 0.001; // 1 msec tick duration
	    CPU_ID = "master";
	};

	ALARM Alarm_TaskSend {
	    COUNTER = system_timer;
		ACTION = ACTIVATETASK {
			TASK = TaskSend;
		};

		AUTOSTART = TRUE {
		    ALARMTIME = 1;
		    CYCLETIME = 50; // 50 msecs (task period)
		};
	};*/

	TASK TaskSend1 {
		CPU_ID = "master";
		PRIORITY = 0x02;
		AUTOSTART = TRUE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskSend2 {
		CPU_ID = "master";
		PRIORITY = 0x04;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

     TASK TaskSend3 {
		CPU_ID = "master";
		PRIORITY = 0x08;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskSend4 {
		CPU_ID = "master";
		PRIORITY = 0x10;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskSend5 {
		CPU_ID = "master";
		PRIORITY = 0x20;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

	TASK TaskReceive1 {
		CPU_ID = "slave1";
		PRIORITY = 0x02;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskReceive2 {
		CPU_ID = "slave1";
		PRIORITY = 0x04;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskReceive3 {
		CPU_ID = "slave1";
		PRIORITY = 0x08;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    TASK TaskReceive4 {
		CPU_ID = "slave1";
		PRIORITY = 0x10;
		AUTOSTART = FALSE;
		STACK = PRIVATE {
			SYS_SIZE = 128;
		};
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

    SPINLOCK spinlock_1 { };
};
