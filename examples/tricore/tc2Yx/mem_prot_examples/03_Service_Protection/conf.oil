CPU test_application {

  OS EE {
    EE_OPT = "EE_DEBUG";
    EE_OPT = "__ASSERT__";
    EE_OPT = "EE_EXECUTE_FROM_RAM";
    EE_OPT = "EE_SAVE_TEMP_FILES";
    //EE_OPT = "EE_MM_OPT";
    //EE_OPT = "EE_ICACHE_ENABLED";
    //EE_OPT = "EE_DCACHE_ENABLED";

    MEMORY_PROTECTION   = TRUE;
    STACKMONITORING     = TRUE;
    /* La seguente diventerà opzione un campo dell'OIL */
    //EE_OPT = "EE_TIMING_PROTECTION__";

    CPU_DATA = TRICORE {
      CPU_CLOCK = 200.0;
      APP_SRC = "code.c";
      APP_SRC = "app1.c";
      APP_SRC = "app2.c";
      APP_SRC = "app3.c";
      MULTI_STACK = TRUE;
      //SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };

    MCU_DATA = TRICORE {
      MODEL = TC27x;
    };

    STATUS        = EXTENDED;
    SHUTDOWNHOOK  = TRUE;
    ORTI_SECTIONS = ALL;
    KERNEL_TYPE = ECC1;
  };

  TASK TaskApp1Prio1 {
    PRIORITY = 1;
    AUTOSTART = TRUE;
    STACK = PRIVATE {
      SYS_SIZE = 256;
    };
    ACTIVATION = 1;
    SCHEDULE = FULL;
    EVENT = EventApp1Prio1;
    //ACCESSING_APPLICATION = App2; //EG: Questo dovrebbe risultare in un errore in configurazione (ScheduleTableApp3 non ha i diritti di accesso sù questo TASK)
    ACCESSING_APPLICATION = App3; //EG: questo è OK invece
  };

  TASK TaskApp2Prio2 {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    STACK = PRIVATE {
      SYS_SIZE = 128;
    };
    ACTIVATION = 1;
    SCHEDULE = FULL;
    EVENT = EventApp2Prio2;
    ACCESSING_APPLICATION = App3;
  };

  TASK TaskApp3Prio1 {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    STACK = SHARED;
    ACTIVATION = 1;
    SCHEDULE = NON;
  };

  TASK TaskApp3Prio2 {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    STACK = SHARED;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    ACCESSING_APPLICATION = App1;
    ACCESSING_APPLICATION = App2;
  };

  EVENT EventApp1Prio1 { MASK = AUTO; };
  EVENT EventApp2Prio2 { MASK = AUTO; };

  COUNTER CounterApp3 {
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 1;
    TICKSPERBASE = 1;
  };

  ALARM AlarmApp3 {
    COUNTER = CounterApp3;
    ACTION = SETEVENT { TASK = TaskApp1Prio1; EVENT = EventApp2Prio2; };
    ACCESSING_APPLICATION = App1;
  };

  SCHEDULETABLE ScheduleTableApp3 {
    COUNTER = CounterApp3;
    DURATION = 1;
    REPEATING = FALSE;
    AUTOSTART = FALSE;
    EXPIRE_POINT = ACTION {
      EXPIRE_VALUE = 1;
      ACTION = SETEVENT { TASK = TaskApp1Prio1; EVENT = EventApp1Prio1; };
      SYNC_ADJUSTMENT = FALSE;
    };
    LOCAL_TO_GLOBAL_TIME_SYNCHRONIZATION = FALSE; //EG @Nico: Che regola di syncronizzazione imponi nella ROM della schedule table in questo caso?
    ACCESSING_APPLICATION = App2;
  };

  APPLICATION App1 {
    TRUSTED = TRUE;
    TASK    = TaskApp1Prio1;
    //MEMORY_SIZE = 0x1000;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
  };

  APPLICATION App2 {
    TRUSTED = FALSE;
    TASK    = TaskApp2Prio2;
    //MEMORY_SIZE = 0x1000;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
  };

  APPLICATION App3 {
    TRUSTED = TRUE;
    TASK    = TaskApp3Prio1;
    TASK    = TaskApp3Prio2;
    COUNTER = CounterApp3;
    ALARM   = AlarmApp3;
    SCHEDULETABLE = ScheduleTableApp3;
    //MEMORY_SIZE = 0x1000;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
    RESTARTTASK = TaskApp3Prio1;
  };
};
