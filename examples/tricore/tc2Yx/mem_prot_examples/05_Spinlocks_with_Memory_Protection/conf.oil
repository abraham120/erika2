CPU test_application {

  OS EE {
    EE_OPT = "EE_DEBUG";
    EE_OPT = "__ASSERT__";
    EE_OPT = "EE_SAVE_TEMP_FILES";
    EE_OPT = "EE_EXECUTE_FROM_RAM";
    //EE_OPT = "EE_MM_OPT";
    EE_OPT = "EE_ICACHE_ENABLED";
    EE_OPT = "EE_DCACHE_ENABLED";

    //SPINLOCKS = QUEUED;
    MEMORY_PROTECTION   = TRUE;
    REMOTENOTIFICATION  = USE_RPC;

    //EE_OPT = "EE_BUILD_SINGLE_ELF";

    MASTER_CPU = "master";

    CPU_DATA = TRICORE {
      ID = "master";
      CPU_CLOCK = 200.0;
      APP_SRC = "master.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      /**** Uncomment the following if you want build you application
            as single elf. ****/
      COMPILER_TYPE = GNU /* {
        EXPORT_FILE = "export_master.exp";
      } */;
      //COMPILER_TYPE = TASKING;
    };

    CPU_DATA = TRICORE {
      ID = "slave1";
      APP_SRC = "slave1.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };

    CPU_DATA = TRICORE {
      ID = "slave2";
      APP_SRC = "slave2.c";
      MULTI_STACK = TRUE;
      SYS_STACK_SIZE = 4096;
      COMPILER_TYPE = GNU;
      //COMPILER_TYPE = TASKING;
    };

    MCU_DATA = TRICORE {
      MODEL = TC27x;
    };

    STATUS = EXTENDED;
    STARTUPHOOK   = TRUE;
    ERRORHOOK     = TRUE;

    USEREMOTETASK = ALWAYS;
    ORTI_SECTIONS = ALL;

    KERNEL_TYPE = ECC1;
  };

  TASK TaskMaster {
    CPU_ID = "master";
    PRIORITY = 1;
    AUTOSTART = TRUE;
    STACK = PRIVATE {
      SYS_SIZE = 512;
    };
    ACTIVATION = 1;
    SCHEDULE = FULL;
    EVENT = Event1;
    EVENT = Event2;
  };

  TASK TaskMaster2 {
    CPU_ID = "master";
    PRIORITY = 2;
    AUTOSTART = FALSE;
    STACK = PRIVATE {
      SYS_SIZE = 512;
    };
    ACTIVATION = 1;
    SCHEDULE = FULL;
    EVENT = Event1;
    EVENT = Event2;
  };

  TASK TaskSlave1 {
    CPU_ID = "slave1";
    PRIORITY = 1;
    AUTOSTART = FALSE;
    STACK = SHARED;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    ACCESSING_APPLICATION = MasterApp;
  };

  TASK TaskSlave2 {
    CPU_ID = "slave2";
    PRIORITY = 1;
    AUTOSTART = FALSE;
    STACK = SHARED;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    ACCESSING_APPLICATION = MasterApp;
  };

  ISR isr_spin {
    CPU_ID = "master";
    CATEGORY = 2;
    PRIORITY = 2;
  };

  SPINLOCK spinlock_1 {
    NEXT_SPINLOCK=spinlock_2;
    ACCESSING_APPLICATION = MasterApp;
  };
  SPINLOCK spinlock_2 {
    NEXT_SPINLOCK=spinlock_3;
    ACCESSING_APPLICATION = MasterApp;
    ACCESSING_APPLICATION = Slave2App;
  };

  SPINLOCK spinlock_3 {
    ACCESSING_APPLICATION = MasterApp;
    ACCESSING_APPLICATION = Slave1App;
  };

  EVENT Event1 { MASK = AUTO; };
  EVENT Event2 { MASK = AUTO; };

  APPLICATION MasterApp {
    CPU_ID  = "master";
    TRUSTED = TRUE;
    TASK    = TaskMaster;
    TASK    = TaskMaster2;
    ISR     = isr_spin;
    //MEMORY_SIZE = 0x1000;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
  };

  APPLICATION Slave1App {
    CPU_ID  = "slave1";
    TRUSTED = FALSE;
    TASK    = TaskSlave1;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
  };

  APPLICATION Slave2App {
    CPU_ID  = "slave2";
    TRUSTED = FALSE;
    TASK    = TaskSlave2;
    SHARED_STACK_SIZE = 256;
    IRQ_STACK_SIZE = 256;
  };
};
