
FUNC void print_test_result(void) {
  int i, j;
  printf("/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\n");
  printf("/* --------- Erika Enterprise - Erika Enterprise - Erika Enterprise --------- */\n");
  printf("/* -- Benchmark running on TI Stellaris LM4F232H5QD and ERIKA Enterp. RTOS -- */\n");
  printf("/* ----------------------------- CPU clock 16MHz ---------------------------- */\n");
  printf("/* ----------------------- IRQ latency register: 0x10 ----------------------- */\n");
  printf("/* --------------------------- Scheduler: OO_BCC1 --------------------------- */\n");
  printf("/* ----------------------- Stack handling:MULTI_STACK ----------------------- */\n");
  printf("/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\n");
  for (i = 0; i < res_size; i++) {
	j=0;
	while (analysis_res[i].str[j] != '\0') 
		printf("%c", analysis_res[i].str[j++]);
	printf("  Mean:    %u.%03u usec ", analysis_res[i].mean / 1000, analysis_res[i].mean % 1000);
	printf("  - %u ticks\r\n", analysis_res[i].ticks_mean);
	printf("  Minimum: %u.%03u usec ", analysis_res[i].low / 1000, analysis_res[i].low % 1000);
	printf("  - %u ticks\r\n", analysis_res[i].ticks_low);
	printf("  Maximum: %u.%03u usec ", analysis_res[i].high / 1000, analysis_res[i].high % 1000);
	printf("  - %u ticks\r\n", analysis_res[i].ticks_high);	
	printf("\r\n"); 
  }  
  printf("/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\n");
}

BS WRITE bm_end == 1, 2
BE 0
G
_sleep_(0)
BD 0
BK *
LOG > ..\results\BM_TI_Stellaris_LM4F232H5QD.log

print_test_result();
LOG OFF
EXIT

