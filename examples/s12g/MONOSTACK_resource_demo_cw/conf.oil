/* ###*B*###
 * ERIKA Enterprise - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2009-2011  Evidence Srl
 *
 * This file is part of ERIKA Enterprise.
 *
 * ERIKA Enterprise is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation, 
 * (with a special exception described below).
 *
 * Linking this code statically or dynamically with other modules is
 * making a combined work based on this code.  Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * As a special exception, the copyright holders of this library give you
 * permission to link this code with independent modules to produce an
 * executable, regardless of the license terms of these independent
 * modules, and to copy and distribute the resulting executable under
 * terms of your choice, provided that you also meet, for each linked
 * independent module, the terms and conditions of the license of that
 * module.  An independent module is a module which is not derived from
 * or based on this library.  If you modify this code, you may extend
 * this exception to your version of the code, but you are not
 * obligated to do so.  If you do not wish to do so, delete this
 * exception statement from your version.
 *
 * ERIKA Enterprise is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 * ###*E*### */

/*
	Author: Dario Di Stefano, 2011
*/ 

CPU test_application {

	OS EE {
		EE_OPT = "DEBUG";
		EE_OPT = "__ASSERT__";
		EE_OPT = "__S12XS_INCLUDE_REGS__";
		EE_OPT = "__CODEWARRIOR__"; 
		/* If the compiler license is expired use this 
		   option to avoid syntax errors during the compilation:
		   EE_OPT = "CW_EVAL_VERSION"; 
		*/
		EE_OPT = "CW_EVAL_VERSION"; 
		CFLAGS = "-D__FAR_DATA -Onf";
		ASFLAGS = "";
		LDFLAGS = "-addansibi.lib"; 
		
		CPU_DATA = MC9S12 {
			APP_SRC = "main.c";
			APP_SRC = "Vectors.c";
			APP_SRC = "CPU12ISRs.c";
			APP_SRC = "Start12.c";
			MULTI_STACK = FALSE;
		};
		
		MCU_DATA = MC9S12 {
   			MODEL = MC9S12G128;
   			TIMER = TRUE;
   			SERIAL = TRUE;
  		};
  		
  		BOARD_DATA = TWRS12G128 {
			OPTIONS = ALL;
		};	

		STATUS = EXTENDED;
		STARTUPHOOK = FALSE;
		ERRORHOOK = FALSE;
		SHUTDOWNHOOK = FALSE;
		PRETASKHOOK = FALSE;
		POSTTASKHOOK = FALSE;
		USEGETSERVICEID = FALSE;
		USEPARAMETERACCESS = FALSE;
		USERESSCHEDULER = FALSE;
		
                EE_OPT = "__OO_STARTOS_OLD__";
		KERNEL_TYPE = BCC1;
		
//		ORTI_SECTIONS = ALL;
    };
    
    APPMODE ModeDecrement;
    APPMODE ModeIncrement;
    
    TASK Task1 {
		PRIORITY = 0x01;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		AUTOSTART = FALSE;
		STACK = SHARED;
		RESOURCE = Resource;
    };

    TASK Task2 {
		PRIORITY = 0x02;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		AUTOSTART = TRUE { APPMODE=ModeIncrement; };	
		STACK = SHARED;
		RESOURCE = Resource;
    };

    RESOURCE Resource { RESOURCEPROPERTY = STANDARD; };
};

