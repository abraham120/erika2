/* ###*B*###
 * ERIKA Enterprise - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2002-2008  Evidence Srl
 *
 * This file is part of ERIKA Enterprise.
 *
 * ERIKA Enterprise is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation, 
 * (with a special exception described below).
 *
 * Linking this code statically or dynamically with other modules is
 * making a combined work based on this code.  Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * As a special exception, the copyright holders of this library give you
 * permission to link this code with independent modules to produce an
 * executable, regardless of the license terms of these independent
 * modules, and to copy and distribute the resulting executable under
 * terms of your choice, provided that you also meet, for each linked
 * independent module, the terms and conditions of the license of that
 * module.  An independent module is a module which is not derived from
 * or based on this library.  If you modify this code, you may extend
 * this exception to your version of the code, but you are not
 * obligated to do so.  If you do not wish to do so, delete this
 * exception statement from your version.
 *
 * ERIKA Enterprise is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 * ###*E*### */

CPU test_application {
	OS EE {
		EE_OPT = "DEBUG";

		CPU_DATA = PIC30 {
			APP_SRC = "code.c";
			MULTI_STACK = TRUE {
				IRQ_STACK = TRUE {
					SYS_SIZE=256;
				};
			};
			ICD2 = TRUE;
		};

		MCU_DATA = PIC30 {
			MODEL = PIC33FJ256MC710;
		};

		BOARD_DATA = EE_FLEX {
			TYPE = DEMO {
				OPTIONS = ALL;
			};
		};

		STATUS = EXTENDED;
		STARTUPHOOK = TRUE; // this demo is using the StartupHook!
		ERRORHOOK = TRUE;
		SHUTDOWNHOOK = FALSE;
		PRETASKHOOK = FALSE;
		POSTTASKHOOK = FALSE;
		USEGETSERVICEID = FALSE;
		USEPARAMETERACCESS = FALSE;
		USERESSCHEDULER = TRUE;

        KERNEL_TYPE = FRSH {
        		TICK_TIME = "500ns";
        		USE_SYNC_OBJ = TRUE;
        		CONTRACTS = CONTRACT {
        				NAME = "c1";
        				BUDGET = 20000;
        				PERIOD = 100000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c2";
        				BUDGET = 20000;
        				PERIOD = 100000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c3";
        				BUDGET = 20000;
        				PERIOD = 100000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c4";
        				BUDGET = 20000;
        				PERIOD = 100000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c5";
        				BUDGET = 40000;
        				PERIOD = 800000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c6";
        				BUDGET = 40000;
        				PERIOD = 800000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "c7";
        				BUDGET = 40000;
        				PERIOD = 800000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "clong";
        				BUDGET = 40000;
        				PERIOD = 80000000;
        			};
        		CONTRACTS = CONTRACT {
        				NAME = "test2contract";
        				BUDGET = 5000;
        				PERIOD = 99999;
        			};
        	};
    };

    TASK Task1 {
    	CONTRACT = "c1";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
		RESOURCE = myRes;
		RESOURCE = myRes2;
    };

    TASK Task2 {
    	CONTRACT = "c2";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
    };
    
    TASK Task3 {
    	CONTRACT = "c3";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
    };
    
    TASK Task4 {
    	CONTRACT = "c4";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
    };

    TASK Task5 {
    	CONTRACT = "clong";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
    };

    TASK test2_callback {
    	CONTRACT = "test2contract";
		PRIORITY = 0x01;
		STACK = PRIVATE {
			SYS_SIZE = 256;
		};
    };

    
    RESOURCE myRes { RESOURCEPROPERTY = STANDARD; };
    RESOURCE myRes2 { RESOURCEPROPERTY = STANDARD; };

    COUNTER Counter1;

    ALARM AlarmTask2 {
                COUNTER = Counter1;
                ACTION = ACTIVATETASK { TASK = Task2; };
    };
    ALARM AlarmTask3 {
                COUNTER = Counter1;
                ACTION = ACTIVATETASK { TASK = Task3; };
    };
    ALARM AlarmTask4 {
                COUNTER = Counter1;
                ACTION = ACTIVATETASK { TASK = Task4; };
    };
    
    ALARM test2alarm {
                COUNTER = Counter1;
                ACTION = ACTIVATETASK { TASK = test2_callback; };
    };
    
};
