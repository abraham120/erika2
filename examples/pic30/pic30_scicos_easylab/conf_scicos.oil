/*
 * ERIKA Enterprise - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2002-2011  Evidence Srl
 *
 * This file is part of ERIKA Enterprise.
 *
 * ERIKA Enterprise is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation, 
 * (with a special exception described below).
 *
 * Linking this code statically or dynamically with other modules is
 * making a combined work based on this code.  Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * As a special exception, the copyright holders of this library give you
 * permission to link this code with independent modules to produce an
 * executable, regardless of the license terms of these independent
 * modules, and to copy and distribute the resulting executable under
 * terms of your choice, provided that you also meet, for each linked
 * independent module, the terms and conditions of the license of that
 * module.  An independent module is a module which is not derived from
 * or based on this library.  If you modify this code, you may extend
 * this exception to your version of the code, but you are not
 * obligated to do so.  If you do not wish to do so, delete this
 * exception statement from your version.
 *
 * ERIKA Enterprise is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 */

CPU mySystem {

    OS myOs {

    #ifndef __NO_MALLOC__
        LDFLAGS = "--heap=2048";
    #endif // __NO_MALLOC__

        CPU_DATA = PIC30 {
            APP_SRC = "dspic_main.c";
            APP_SRC = "common.c";
            MULTI_STACK = FALSE;
            ICD2 = TRUE;
        };
        
        /* This is going to be removed when scicos RT-Druid will updated */
        MCU_DATA = PIC30 {
            MODEL = CUSTOM {
                MODEL = "33FJ64MC802";
                LINKERSCRIPT = "P33FJ64MC802.gld";
                DEV_LIB = "libp33FJ64MC802-elf.a";
                INCLUDE_C = "p33FJ64MC802.h";
                INCLUDE_S = "p33FJ64MC802.inc";
            };
        };
        EE_OPT = "__dsPIC33FJ64MC802__"; 
    
        /* This should be uncomment when scicos RT-Druid will updated
        MCU_DATA = PIC30 {
            MODEL = PIC33FJ64MC802;
        }*/

        /* This is going to be removed when XSLT generator will be fixed */
        EE_OPT = "__EE_EASYLAB__";
        /* This should be uncomment when XSLT generator will be fixed
        BOARD_DATA = EE_EASYLAB {
        };*/

        LIB = ENABLE {
            NAME = "SCICOS";
#ifdef __EE_UART_PORT1_CBUFFER__
            NAME = "MEMORY";
#endif /*__EE_UART_PORT1_CBUFFER__*/
        };
        EE_OPT = "__ADD_LIBS__";
        
        EE_OPT = "DEBUG";
        EE_OPT = "__USE_TIMER__";
        EE_OPT = "__EE_EASYLAB__";

        /* Fixed Priority kernell */    
        KERNEL_TYPE = FP;
    };    
    
    TASK rt_sci {
        PRIORITY = 100;
        STACK = SHARED;
        SCHEDULE = FULL;
    };
    
#ifdef __RECEIVING_FROM_UART__
    TASK receiving_from_uart {
        PRIORITY = 1;
        STACK = SHARED;
        SCHEDULE = FULL;
    };
#endif

    COUNTER sciCounter;

    ALARM AlarmSci {
        COUNTER = sciCounter;
        ACTION = ACTIVATETASK { TASK = rt_sci; };
    };
};

