/*
 * ERIKA Enterprise Basic - a tiny RTOS for small microcontrollers
 *
 * Copyright (C) 2002-2007  Evidence Srl
 *
 * This file is part of ERIKA Enterprise Basic.
 *
 * ERIKA Enterprise Basic is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * ERIKA Enterprise Basic is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 * You should have received a copy of the GNU General Public License
 * version 2 along with ERIKA Enterprise Basic; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 */

/*
 * File: conf.oil
 * Author: Gianluca Franchino.
 * Affiliation: Retis Lab. Scuola Superiore Sant'Anna. Pisa (Italy).
 * Contacts: g.franchino@sssup.it; gianluca@evidence.eu.com
 * Date: 03/20/2009.
 */
 
CPU mySystem {

	OS myOs {
		EE_OPT = "RELEASE";
		CPU_DATA = PIC30 {
			APP_SRC = "code.c";
			MULTI_STACK = FALSE;
			ICD2 = TRUE;
		};

		MCU_DATA = PIC30 {
			MODEL = PIC33FJ256MC710;
		};
		
		BOARD_DATA = EE_FLEX {
			TYPE = DEMO {
				OPTIONS = ALL;
			};
		};
		 
		KERNEL_TYPE = FP;
		
		EE_OPT = "__USE_UART__";
		EE_OPT = "__ADD_LIBS__";
		LIB = ENABLE {
			NAME = "CONSOLE";
			NAME = "MIWIP2P";
		};	
		EE_OPT = "USE_CONSOLE";
		EE_OPT = "USE_CONSOLE_SERIAL";
		//EE_OPT = "__USE_PICDEMZ_WITH_INT4__";
		EE_OPT = "__USE_PICDEMZ_WITH_CN20INT__";
	};
	
	COUNTER myCounter;
	
	ALARM AlarmProt {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK { TASK = TaskMiWiOP; };
		
	};
	ALARM AlarmSend {
		COUNTER = myCounter;
		ACTION = ACTIVATETASK { TASK = TaskSend; };
	};
	
	TASK TaskSend {
		PRIORITY = 1;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = S0;
	};
		
	TASK TaskMiWiOP {
		PRIORITY = 2;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = S0;
		RESOURCE = S1;
	};
	
		TASK TaskRec {
		PRIORITY = 3;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = S0;
		RESOURCE = S1;
	};
	
	TASK TaskInt {
		PRIORITY = 4;
		STACK = SHARED;
		SCHEDULE = FULL;
		RESOURCE = S0;
	};
	
	RESOURCE S0 { RESOURCEPROPERTY = STANDARD; };
	RESOURCE S1 { RESOURCEPROPERTY = STANDARD; };
};

