%!PS
%%BoundingBox: 21 0 596 807
%
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%DocumentFonts: Helvetica Helvetica-Bold Helvetica-Oblique Helvetica-BoldOblique
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Times-BoldItalic
%%Pages: (atend)
%%EndComments
%
% T32-PRINTERS (for DIN-A4)
% 1 80 58 F PSP10 POSTSCRIPT/P COURIER 10cpi
% 2 94 67 F PSP12 POSTSCRIPT/P COURIER 12cpi
% 3 116 80 F PSP15 POSTSCRIPT/P COURIER 15cpi
% 4 156 100 F PSP20 POSTSCRIPT/P COURIER 20cpi
% 5 110 40 F PSL10 POSTSCRIPT/L COURIER 10cpi
% 6 132 46 F PSL12 POSTSCRIPT/L COURIER 12cpi
% 7 164 56 F PSL15 POSTSCRIPT/L COURIER 15cpi
% 8 220 68 F PSL20 POSTSCRIPT/L COURIER 20cpi
% 9 80 58 P PSPS10 POSTSCRIPT/P SWISS 10cpi
% 10 94 67 P PSPS12 POSTSCRIPT/P SWISS 12cpi
% 11 116 80 P PSPS15 POSTSCRIPT/P SWISS 15cpi
% 12 80 58 P PSPT10 POSTSCRIPT/P TIMES 10cpi
% 13 94 67 P PSPT12 POSTSCRIPT/P TIMES 12cpi
% 14 116 80 P PSPT15 POSTSCRIPT/P TIMES 15cpi
%
% The table obove defines the possible printer selections
% for TRACE32 PRINTER.SELECT and PRINTER.FILETYPE commands.
% It can be changed to meet user specific needs.
% The page header commands for the new printer must be added also
% to the 'printer' table below.
%
% The table above consists of the following fields:
% printer columns lines Fixed/Prop name description
% 
% Version 2.0 prologue for T32 files.
%
/inch { 72 mul } bind def
/Page 1 def

% Pagesize and Margins (NOTE: change also BoundingBox comment!)
/PaperSize 11.7 inch def
/PaperWidth 8.27 inch def
/LM 0.3 inch def
/TM 0.5 inch def

% Character Spaces
/PS 10  def
/vs { PS 2 add } def
/hs { PS 0.6 mul } def

% Here you can change your fonts
/mf { findfont PS scalefont setfont } bind def

% standard font
/fc0 { /Courier mf } bind def
% italic
/fc1 { /Courier-Oblique mf } bind def
% double strike
/fc2 { /Courier-Bold mf } bind def
% double strike + italic
/fc3 { /Courier-BoldOblique mf } bind def
% small
/fc4 {
	/Courier findfont [ PS 0 0 PS 1.3 div 0 0 ] makefont setfont
} bind def
% small for graphics
/fc5 {
	/Courier findfont [ PS 0 0 PS 1.3 div 0 PS 5 div ] makefont setfont
} bind def
% double width
/fc6 { /Courier-Bold findfont 
	[ PS 2 mul 0 0 PS 1.3 mul 0 0 ] 
	makefont setfont 
} bind def
% for non-ascii characters
/fc7 {
	/Courier findfont [ PS 2 div 0 0 PS 1 div 0 0 ] makefont setfont
} bind def

% standard font
/fs0 { /Helvetica mf } bind def
% italic
/fs1 { /Helvetica-Oblique mf } bind def
% double strike
/fs2 { /Helvetica-Bold mf } bind def
% double strike + italic
/fs3 { /Helvetica-BoldOblique mf } bind def
% small
/fs4 {
	/Helvetica findfont [ PS 0 0 PS 1.3 div 0 0 ] makefont setfont
} bind def
% small for graphics
/fs5 {
	/Helvetica findfont [ PS 0 0 PS 1.3 div 0 PS 5 div ] makefont setfont
} bind def
% double width
/fs6 { /Helvetica-Bold findfont 
	[ PS 2 mul 0 0 PS 1.3 mul 0 0 ] 
	makefont setfont 
} bind def
% for non-ascii characters
/fs7 {
	/Helvetica findfont [ PS 2 div 0 0 PS 1 div 0 0 ] makefont setfont
} bind def

% standard font
/ft0 { /Times-Roman mf } bind def
% italic
/ft1 { /Times-Italic mf } bind def
% double strike
/ft2 { /Times-Bold mf } bind def
% double strike + italic
/ft3 { /Times-BoldItalic mf } bind def
% small
/ft4 {
	/Times-Roman findfont [ PS 0 0 PS 1.3 div 0 0 ] makefont setfont
} bind def
% small for graphics
/ft5 {
	/Times-Roman findfont [ PS 0 0 PS 1.3 div 0 PS 5 div ] makefont setfont
} bind def
% double width
/ft6 { /Times-Bold findfont 
	[ PS 2 mul 0 0 PS 1.3 mul 0 0 ] 
	makefont setfont 
} bind def
% for non-ascii characters
/ft7 {
	/Times-Roman findfont [ PS 2 div 0 0 PS 1 div 0 0 ] makefont setfont
} bind def

% begin of line
/cr { currentpoint exch pop LM exch moveto } def
% to begin of next line
/crlf { currentpoint vs sub 
	exch pop LM exch moveto } def

/Helvetica findfont 1 scalefont setfont

/lowerlogo {
37 42 moveto 32 60 lineto
53 42 moveto 58 60 lineto
45 72 moveto 45 48 lineto
15 60 moveto 
32 60 lineto
45 72 lineto
58 60 lineto
75 60 lineto
65 42 lineto
53 42 lineto
45 48 lineto
37 42 lineto
25 42 lineto
15 60 lineto
} bind def

/upperlogo {
	45 5 moveto 51 38 lineto
	45 5 moveto 45 43 lineto
	45 5 moveto 39 38 lineto
	27 38 moveto
	45 5 lineto
	63 38 lineto 
	51 38 lineto 
	45 43 lineto 
	39 38 lineto 
	27 38 lineto
} bind def

/bound {
	gsave
	newpath
	15 72 moveto
	15 5 lineto
	75 5 lineto
	75 72 lineto
	15 72 lineto
	closepath
	stroke
	grestore
} def
/logo {
	gsave
	currentpoint translate 0 0 moveto
	dup scale
	gsave
		75 96 translate
		180 rotate
		newpath
		0.5 setlinewidth lowerlogo
		closepath 0.3  setgray fill
		0 setgray
		lowerlogo stroke
		0 setgray
		newpath
		upperlogo
		closepath 
		0.5 setgray fill
		0 setgray upperlogo
		25 42 moveto 30 38 lineto
		65 42 moveto 60 38 lineto
		stroke
	grestore
	/Helvetica-BoldOblique findfont 12 scalefont setfont
	30 (Lauterbach) stringwidth pop 2 div sub  16  moveto (Lauterbach) show
	/Helvetica-Oblique findfont 12 scalefont setfont 
	30 (Datentechnik) stringwidth pop 2 div sub 0 moveto (Datentechnik) show 
	grestore
} def


/prtheader {
	/nstr 5 string def
	/Page exch def
	gsave
		/Helvetica mf
		currentpoint 36 sub moveto % height of logo
		cr (TRACE32) show
		LM currentpoint 2 sub exch pop moveto
		2 setlinewidth
		RM LM sub 0 rlineto
		-30 2 rmoveto 0.5 logo
		currentpoint stroke moveto
		crlf
		LM RM add 2 div % middle of page
		Page nstr cvs stringwidth pop (- ) stringwidth pop add sub
		currentpoint exch pop moveto (- ) show
		Page nstr cvs show    
		( -) show
		crlf currentpoint
	grestore
	moveto
} def


/printer {
	0 PaperSize translate % upper left corner
	dup 1 eq { 
		/PS 12 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 2 eq {
		/PS 10 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 3 eq {
		/PS 8 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 4 eq {
		/PS 6 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 5 eq { 
		/PS 12 def
		/RM PaperSize LM sub def
		-90 rotate
		LM PaperWidth TM sub moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 6 eq {
		/PS 10 def
		/RM PaperSize LM sub def
		-90 rotate
		LM PaperWidth TM sub moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 7 eq {
		/PS 8 def
		/RM PaperSize LM sub def
		-90 rotate
		LM PaperWidth TM sub moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 8 eq {
		/PS 6 def
		/RM PaperSize LM sub def
		-90 rotate
		LM PaperWidth TM sub moveto
		/f0 { fc0 } def
		/f1 { fc1 } def
		/f2 { fc2 } def
		/f3 { fc3 } def
		/f4 { fc4 } def
		/f5 { fc5 } def
		/f6 { fc6 } def
		/f7 { fc7 } def
	} if
	dup 9 eq { 
		/PS 12 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fs0 } def
		/f1 { fs1 } def
		/f2 { fs2 } def
		/f3 { fs3 } def
		/f4 { fs4 } def
		/f5 { fs5 } def
		/f6 { fs6 } def
		/f7 { fs7 } def
	} if
	dup 10 eq {
		/PS 10 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fs0 } def
		/f1 { fs1 } def
		/f2 { fs2 } def
		/f3 { fs3 } def
		/f4 { fs4 } def
		/f5 { fs5 } def
		/f6 { fs6 } def
		/f7 { fs7 } def
	} if
	dup 11 eq {
		/PS 8 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { fs0 } def
		/f1 { fs1 } def
		/f2 { fs2 } def
		/f3 { fs3 } def
		/f4 { fs4 } def
		/f5 { fs5 } def
		/f6 { fs6 } def
		/f7 { fs7 } def
	} if
	dup 12 eq { 
		/PS 12 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { ft0 } def
		/f1 { ft1 } def
		/f2 { ft2 } def
		/f3 { ft3 } def
		/f4 { ft4 } def
		/f5 { ft5 } def
		/f6 { ft6 } def
		/f7 { ft7 } def
	} if
	dup 13 eq {
		/PS 10 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { ft0 } def
		/f1 { ft1 } def
		/f2 { ft2 } def
		/f3 { ft3 } def
		/f4 { ft4 } def
		/f5 { ft5 } def
		/f6 { ft6 } def
		/f7 { ft7 } def
	} if
	dup 14 eq {
		/PS 8 def
		/RM PaperWidth LM sub def
		LM TM neg moveto
		/f0 { ft0 } def
		/f1 { ft1 } def
		/f2 { ft2 } def
		/f3 { ft3 } def
		/f4 { ft4 } def
		/f5 { ft5 } def
		/f6 { ft6 } def
		/f7 { ft7 } def
	} if

	pop
	currentpoint /UROW exch def /UCOL exch def
%	enable this line to print a header line
%	prtheader
} bind def

vs 15 div setlinewidth

/u1 { /UB currentpoint pop def } def 
/u0 { /UR currentpoint pop UB sub def 
	currentpoint
	UR neg vs 0.167 mul neg rmoveto UR vs 30 div add 0 rlineto stroke
	moveto
    } def
/o1 { /OB currentpoint pop def } def 
/o0 { /OR currentpoint pop OB sub def 
	currentpoint
	OR neg vs vs 0.3 mul neg add rmoveto OR vs 30 div add 0 rlineto stroke
	moveto
    } def

/sc { /storepos exch def
     currentpoint exch pop LM storepos hs mul add exch moveto     
 } bind def

/s { show } bind def
/r { repeat } bind def

/g {
	/samples exch def
	/width exch def
	gsave
	currentpoint translate
	0 vs neg 5 div translate
	hs vs scale
	width samples true [width 0 0 samples neg 0 samples ] {Graphic} imagemask
	grestore 
	hs 0 rmoveto
} bind def

/graphchar [
%g_00 
<00 00 00 38 7C 7C FE FE 7C 7C 38 00 00 00 00> 
<00 00 00 40 60 50 48 C4 48 50 60 40 00 00 00> 
<10 10 10 10 FE 82 82 44 44 44 28 28 10 00 00> 
<00 00 00 00 00 00 00 1E 10 10 10 10 10 10 10> 
<00 00 00 04 0C 14 24 46 24 14 0C 04 00 00 00> 
<00 00 00 00 00 00 00 FE 00 00 00 00 00 00 00> 
<00 00 00 00 00 00 00 F0 10 10 10 10 10 10 10> 
<00 00 00 00 00 00 00 FE 10 10 10 10 10 10 10> 
<00 10 28 28 44 44 44 82 82 FE 10 10 10 10 10> 
<10 10 10 10 10 10 10 1E 00 00 00 00 00 00 00> 
<10 10 10 10 10 10 10 10 10 10 10 10 10 10 10> 
<10 10 10 10 10 10 10 1E 10 10 10 10 10 10 10> 
<10 10 10 10 10 10 10 F0 00 00 00 00 00 00 00> 
<10 10 10 10 10 10 10 FE 00 00 00 00 00 00 00> 
<10 10 10 10 10 10 10 F0 10 10 10 10 10 10 10> 
<10 10 10 10 10 10 10 FE 10 10 10 10 10 10 10> 
%g_10 
<08 08 08 08 08 08 08 08 08 08 08 08 08 08 08> 
<08 08 08 08 08 08 08 38 08 08 08 08 08 08 08> 
<08 08 08 08 08 08 08 F8 08 08 08 08 08 08 08> 
<10 10 10 10 10 1E 00 00 00 1E 10 10 10 10 10> 
<00 00 00 00 00 00 00 00 00 00 00 10 10 10 10> 
<00 00 00 00 00 00 00 00 00 00 18 18 18 18 18> 
<00 00 00 00 00 00 00 38 38 38 38 38 38 38 38> 
<00 00 10 10 10 7C 10 10 10 00 7C 00 00 00 00> 
<00 00 00 00 00 00 FE FE FE 00 00 00 00 00 00> 
<38 38 38 38 38 38 38 38 38 38 38 38 38 38 38> 
<00 00 10 00 00 00 00 10 00 00 00 00 10 00 00> 
<28 44 82 00 00 FE 00 00 FE 00 00 00 00 00 00> 
<00 00 E0 90 88 84 82 84 88 90 E0 00 00 00 00> 
<00 00 00 00 00 00 00 00 00 00 90 90 00 00 00> 
<00 10 38 28 28 44 44 82 82 EE 28 28 38 00 00> 
<00 00 00 04 04 04 84 44 24 24 28 30 00 00 00> 
%g_20 
<00 00 00 00 00 00 00 00 00 00 44 7c 00 00 00> 
<00 80 C0 A0 90 88 84 82 84 E4 12 16 18 00 00> 
%g_22
<00 1e 10 10 10 10 10 10 10 10 10 10 10 10 1e> 
<00 82 82 82 82 82 82 82 82 82 82 82 82 82 82> 
<00 f0 10 10 10 10 10 10 10 10 10 10 10 10 f0> 
<00 02 02 02 02 02 02 02 02 02 02 02 02 02 02> 
<00 00 00 00 00 00 00 00 00 00 00 00 00 00 1e> 
<00 00 00 00 00 00 00 00 00 00 00 00 00 00 fe> 
<00 00 00 00 00 00 00 00 00 00 00 00 00 00 f0> 
<00 80 80 80 80 80 80 80 80 80 80 80 80 80 80> 
<10 1e 00 00 00 00 00 00 00 00 00 00 00 00 00> 
<00 fe 00 00 00 00 00 00 00 00 00 00 00 00 00> 
<10 f0 00 00 00 00 00 00 00 00 00 00 00 00 00> 
<10 1e 10 10 10 10 10 10 10 10 10 10 10 10 1e> 
<10 f0 10 10 10 10 10 10 10 10 10 10 10 10 f0> 
<10 10 10 10 10 10 10 10 10 10 10 10 10 10 10> 
<00 00 82 44 44 28 28 10 28 28 44 44 82 00 00> 
<10 10 10 10 10 10 10 10 10 10 10 10 10 10 10> 
<10 90 90 90 90 90 90 90 90 90 90 90 90 90 90> 
<10 90 90 90 90 90 90 90 90 90 90 90 90 90 90> 
<00 0e 0e 0e 0e 0e 0e 0e 0e 0e 0e 0e 0e 0e 0e> 
] def
/sg {
	/proc exch graphchar exch get def
	gsave
	currentpoint translate
	0 vs neg 5 div translate
	hs vs scale
	7 15 true [ 7  0 0 -15 0 15 ] {proc} imagemask
	grestore 
	hs 0 rmoveto
}  def

/scg {
	/codech exch def
	gsave
	0 vs 8 div rmoveto
	codech 0 1 getinterval show
	0 vs 4 div neg rmoveto
	codech 1 1 getinterval show
	grestore
	hs 0 rmoveto
} def

%%EndProlog
